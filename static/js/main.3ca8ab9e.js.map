{"version":3,"file":"static/js/main.3ca8ab9e.js","mappings":"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","sources":["components/header.tsx","components/todo.tsx","components/main.tsx","components/footer.tsx","App.tsx","model/model.ts"],"sourcesContent":["import { Input } from \"antd\";\nimport React, { KeyboardEvent,ChangeEvent} from \"react\";\n\ninterface Props{\n    handleNewTodoChange:(event:ChangeEvent<HTMLInputElement>)=>void,\n    handleNewTodo:(event:KeyboardEvent<HTMLInputElement>)=>void,\n    newTodo:string\n}\n\nfunction Header(props:Props){\n    const{handleNewTodoChange,handleNewTodo,newTodo}=props;\n    return (\n        <header className=\"todos-header\">\n            <h1>todos</h1>\n            <Input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            type=\"text\"\n            autoFocus\n            onKeyDown={handleNewTodo}\n            value={newTodo}\n            onChange={handleNewTodoChange}\n            ></Input>\n        </header>\n    )\n}\n\nexport default Header;\n","import { TodoItem } from \"@/model/model\";\r\nimport { CloseOutlined,EditOutlined,SaveOutlined} from '@ant-design/icons'\r\nimport React,{ChangeEvent} from 'react';\r\nimport { Button,Input } from 'antd'\r\n\r\ninterface Props{\r\n    todo:TodoItem,\r\n    delTodo:(todo:TodoItem)=>void,\r\n    completeTodo:(todo:TodoItem)=>void\r\n    editContent:(todo:TodoItem,text:string)=>void\r\n\r\n}\r\nexport default function Todo(props:Props){\r\n    const {todo,delTodo,completeTodo,editContent}=props;\r\n    const [text,setText]=React.useState(todo.content);\r\n    const textChange=(event:ChangeEvent<HTMLInputElement>)=>{\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <li\r\n        onClick={()=>{\r\n            completeTodo(todo);}}\r\n        className={todo.editing?'editing':''}>\r\n            <div className=\"complete\">\r\n            </div>\r\n            <div className=\"todo\">\r\n            <div className=\"content\">\r\n                <label className={todo.state?'completed':''}>{todo.content}</label>\r\n            </div>\r\n            <div className=\"del\">\r\n            <Button\r\n            icon={<EditOutlined />}\r\n            onClick={(e)=>{\r\n                todo.editing=true;\r\n                setText(todo.content);}}>\r\n            </Button>\r\n            <Button\r\n            icon={<CloseOutlined />}\r\n            onClick={()=>delTodo(todo)}></Button>\r\n            </div>\r\n            </div>\r\n            <Input\r\n            className='edit'\r\n            autoFocus={true}\r\n            value={text}\r\n            onChange={textChange}/>\r\n            <Button\r\n            icon={<SaveOutlined />}\r\n            className='edit-btn'\r\n            onClick={(e)=>{\r\n            editContent(todo,text);\r\n            e.stopPropagation();}}></Button>\r\n            </li>\r\n    )\r\n}\r\n","import React,{ChangeEvent} from 'react';\nimport { Button,Input } from 'antd'\nimport { CloseOutlined,EditOutlined,SaveOutlined} from '@ant-design/icons'\nimport { TodoItem } from '@/model/model';\nimport Todo from './todo'\ninterface Props{\n    todos:Array<TodoItem>,\n    delTodo:(todo:TodoItem)=>void,\n    completeTodo:(todo:TodoItem)=>void\n    completeAll:()=>void\n    editContent:(todo:TodoItem,text:string)=>void\n}\n\nfunction Main(props:Props){\n    const {todos,delTodo,completeTodo,completeAll,editContent}=props;\n\n    return (\n        <section className=\"todos-main\">\n            <div\n            className=\"complete-all\"\n            onClick={completeAll}>❯</div>\n            <ul>\n                {\n                    todos.map(todo=>(\n                        <Todo\n                        key={todo.id}\n                        todo={todo}\n                        delTodo={delTodo}\n                        completeTodo={completeTodo}\n                        editContent={editContent}></Todo>\n                    ))\n                }\n            </ul>\n        </section>\n    )\n}\nexport default Main;\n","interface Props{\n    activeAccount:number,\n    Account:number\n}\n\nfunction Footer(props:Props){\n    const {activeAccount,Account} =props;\n    let length=activeAccount+Account;\n    if (length>0){\n    return (\n        <footer className=\"todos-footer\">\n            <span>{activeAccount} items left</span>\n            <ul>\n                <li><a href=\"#/\">All</a></li>\n                <li><a href=\"#/Active\">Active</a></li>\n                <li><a href=\"#/Completed\">Completed</a></li>\n            </ul>\n        </footer>\n    )}else return null;\n}\nexport default Footer;\n","import React ,{KeyboardEvent,ChangeEvent,MouseEvent}from 'react';\r\nimport { useLocation } from '@modern-js/runtime/router';\r\nimport Header from './components/header';\r\nimport Main from './components/main';\r\nimport Footer from './components/footer';\r\nimport { Model,TodoItem } from './model/model';\r\nimport './App.css';\r\nimport './style/index.css'\r\n\r\n//初始化列表\r\nconst todos=new Model();\r\n\r\nfunction App(){\r\n\r\n  //初始化各种数据\r\n  const [newTodo,setNewTodo]=React.useState('');\r\n  const [listState,setListState]=React.useState('');\r\n  const [showingTodo,setShowingTodo]=React.useState(todos.todos);\r\n  const location=useLocation().hash;\r\n  const handleNewTodoChange=(event:ChangeEvent<HTMLInputElement>)=>{\r\n    setNewTodo(event.target.value);\r\n  }\r\n\r\n  const handleNewTodo=(event:KeyboardEvent<HTMLInputElement>)=>{\r\n  if(event.code!=='Enter'||newTodo.length<=0){\r\n    return;\r\n  }\r\n  todos.addNewTodo(newTodo)\r\n  setNewTodo('');\r\n  }\r\n\r\n  const completeTodo=(todo:TodoItem)=>{\r\n    todos.completeTodo(todo);\r\n    setShowingTodo(todos.todos);\r\n  }\r\n\r\n  const delTodo=(todo:TodoItem)=>{\r\n    todos.delTodo(todo);\r\n    setShowingTodo(todos.todos);\r\n  }\r\n  const completeAll=()=>{\r\n    const state=todos.todos.filter(todo=>{\r\n      return todo.state===false;\r\n    }).length>0;\r\n    todos.completeAll(state);\r\n    setShowingTodo(todos.todos);\r\n  }\r\n\r\n  const editContent=(todo:TodoItem,text:string)=>{\r\n    todos.editTodo(todo,text);\r\n    setShowingTodo(todos.todos);\r\n  }\r\n\r\n  let list=todos.todos;\r\n  if(listState=='Active'){\r\n    list=list.filter(todo=>{\r\n      return todo.state==false;\r\n    })\r\n  }else if(listState=='Completed'){\r\n    list=list.filter(todo=>{\r\n      return todo.state==true;\r\n    })\r\n  }\r\n  React.useEffect(()=>{\r\n    if(location.includes('Active')){\r\n      setListState('Active');\r\n    } else if(location.includes('Completed')){\r\n      setListState('Completed');\r\n    }else setListState('');\r\n  },[location])\r\n\r\n  React.useEffect(()=>{\r\n    list=todos.todos;\r\n  },[todos.todos]);\r\n  return (\r\n    <div className=\"container-box\">\r\n      <Header\r\n      handleNewTodoChange={handleNewTodoChange}\r\n      handleNewTodo={handleNewTodo}\r\n      newTodo={newTodo}></Header>\r\n      <Main\r\n      todos={list}\r\n      delTodo={delTodo}\r\n      completeTodo={completeTodo}\r\n      completeAll={completeAll}\r\n      editContent={editContent}></Main>\r\n      <Footer\r\n      Account={todos.todos.length}\r\n      activeAccount={todos.todos.filter(todo=>{return todo.state==false}).length}\r\n      ></Footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { threadId } from \"worker_threads\";\n\nexport interface TodoItem{\n    id:string,\n    content:string,\n    state:boolean,\n    editing:boolean,\n}\n\nexport class Model{\n    todos:Array<TodoItem>\n\n    //初始化\n    constructor(){\n        this.todos=localStorage[\"todos\"]?JSON.parse(localStorage[\"todos\"]):[];\n        if(this.todos.length>0){\n            this.todos.forEach(todo=>{\n                todo.editing=false;\n            })\n        }\n    }\n\n    //更新本地存储\n    updateList(){\n        localStorage.setItem('todos',JSON.stringify(this.todos));\n    }\n\n    //添加新项\n    addNewTodo(content:string){\n\n        this.todos.push({\n            id:Math.random().toString(16),\n            content,\n            state:false,\n            editing:false\n        });\n        this.updateList();\n    }\n\n    //删除单项\n    delTodo(todo:TodoItem){\n        this.todos=this.todos.filter(val=>{\n            return val!==todo;\n        });\n        this.updateList();\n    }\n\n    //完成单项\n    completeTodo(current:TodoItem){\n        this.todos=this.todos.map(todo=>{\n            return todo!==current?todo:{...todo,state:!todo.state};\n        });\n        this.updateList();\n    }\n\n    //修改单项内容\n    editTodo(current:TodoItem,content:string){\n        this.todos=this.todos.map(todo=>{\n            return todo!==current?todo:{...todo,content:content,editing:false};\n        });\n        this.updateList();\n    }\n    //完成全部项\n    completeAll(state:boolean){\n        this.todos=this.todos.map(todo=>{\n            return {\n                ...todo,\n                state:state\n            }\n        });\n        this.updateList();\n    }\n}\n"],"names":["props","handleNewTodoChange","handleNewTodo","newTodo","className","placeholder","type","autoFocus","onKeyDown","value","onChange","Todo","todo","delTodo","completeTodo","editContent","React","content","text","setText","onClick","editing","state","icon","EditOutlined","e","CloseOutlined","event","target","SaveOutlined","stopPropagation","todos","completeAll","map","id","activeAccount","Account","href","this","localStorage","JSON","parse","length","forEach","setItem","stringify","push","Math","random","toString","updateList","filter","val","current","setNewTodo","listState","setListState","setShowingTodo","location","useLocation","hash","list","includes","code","addNewTodo","editTodo"],"sourceRoot":""}